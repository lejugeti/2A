//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil
//     Les modifications apportées à ce fichier seront perdues si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public class Voiture
{
	public virtual string NumImmatriculation
	{
		get;
		set;
	}

	public virtual int NbChevaux
	{
		get;
		set;
	}

	public virtual Consommation Consommation
	{
		get;
		set;
	}

	public virtual Compteur Compteur
	{
		get;
		set;
	}

	public virtual Reservoir Reservoir
	{
		get;
		set;
	}

	public Voiture(int puissance, string num)
	{
        NbChevaux = puissance;
        NumImmatriculation = num;

        Compteur = new Compteur();
        Reservoir = new Reservoir(NbChevaux);
	}

	public virtual double Rouler(int nbKm, double vitesse)
	{
        double cout = 0;
        double vitesseActuelle = Compteur.GetVitesse();
        Compteur.SetVitesse(vitesse);
        Compteur.SetKmParcourus(nbKm);

        double conso = Conso();

        cout = conso * (nbKm / 100) * 1.5; //calcul du coût

        double kmRestant = nbKm;
        while(kmRestant >= 0)
        {
            Reservoir.Diminuer(conso, kmRestant);
            double distMax = Reservoir.DistanceMaxi(conso); //calcul distance max en fonction de la capacité du réservoir
            kmRestant -= distMax;

            if (distMax < kmRestant)
            {
                TomberEnPanne();
                cout += 100;
            }
        }

        return cout;
    }

	public virtual double Conso()
	{
        double conso = 0;
        double nbKm = Compteur.Kilometrage;

        //attribution conso
        if (nbKm >= 0 && nbKm <= 80) conso = 6;
        else if (nbKm > 80 && nbKm <= 100) conso = 7;
        else if (nbKm > 100 && nbKm <= 120) conso = 8;
        else if (nbKm > 120 && nbKm <= 130) conso = 9;

        if (conso > 4) //augmentation en fonction des chevaux
        {
            int chevalSup = NbChevaux - 4;
            conso = conso * 1.0015 * chevalSup;
        }

        return conso;
        
    }

    public virtual void TomberEnPanne()
	{
        FairePlein();
	}

	public virtual void FairePlein()
	{
        Reservoir.Remplir();
	}

    
}

